<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="DynamicStyles.DynamicStylesInheritancePage">
  <ContentPage.Padding>
    <OnPlatform x:TypeArguments="Thickness"
                iOS="0, 20, 0, 0"
                Android="0"
                WinPhone="0" />
  </ContentPage.Padding>

  <ContentPage.Resources>
    <ResourceDictionary>
      <Style x:Key="baseButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="Large" />
      </Style>

      <Style x:Key="buttonStyle1" TargetType="Button"
             BasedOn="{StaticResource baseButtonStyle}">
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="VerticalOptions" Value="CenterAndExpand" />
        <Setter Property="TextColor" Value="Red" />
      </Style>

      <Style x:Key="buttonStyle2" TargetType="Button"
             BasedOn="{StaticResource baseButtonStyle}">
        <Setter Property="HorizontalOptions" Value="Start" />
        <Setter Property="VerticalOptions" Value="EndAndExpand" />
        <Setter Property="TextColor" Value="Green" />
        <Setter Property="FontAttributes" Value="Italic" />
      </Style>

      <Style x:Key="buttonStyle3" TargetType="Button"
             BasedOn="{StaticResource baseButtonStyle}">
        <Setter Property="HorizontalOptions" Value="End" />
        <Setter Property="VerticalOptions" Value="StartAndExpand" />
        <Setter Property="TextColor" Value="Blue" />
        <Setter Property="FontAttributes" Value="Bold" />
      </Style>
      
      <!--
      Notice that the first three Button elements reference the “newButtonStyle” dictionary entry with StaticResource. 
      DynamicResource is not needed here because the Style object associated with the “newButtonStyle” will not itself change except for the Style that it derives from. 
      The Style with the key “newButtonStyle” maintains a link with “buttonStyle” and internally alters itself when that un-derlying style changes.
      -->
      <!-- New style definition. -->
      <Style x:Key="newButtonStyle" TargetType="Button"
             BaseResourceKey="buttonStyle">
        <Setter Property="BackgroundColor">
          <Setter.Value>
            <OnPlatform x:TypeArguments="Color"
                        iOS="#C0C0C0"
                        Android="#404040"
                        WinPhone="Gray" />
          </Setter.Value>
        </Setter>
        <Setter Property="BorderColor" Value="Red" />
        <Setter Property="BorderWidth" Value="3" />
      </Style>
    </ResourceDictionary>
  </ContentPage.Resources>

  <StackLayout>
    <Button Text=" Switch to Style #1 "
            Style="{StaticResource newButtonStyle}"
            Clicked="OnButton1Clicked" />

    <Button Text=" Switch to Style #2 "
            Style="{StaticResource newButtonStyle}"
            Clicked="OnButton2Clicked" />

    <Button Text=" Switch to Style #3 "
            Style="{StaticResource newButtonStyle}"
            Clicked="OnButton3Clicked" />

    <Button Text=" Reset "
            Style="{DynamicResource buttonStyle}"
            Clicked="OnResetButtonClicked" />
  </StackLayout>
</ContentPage>